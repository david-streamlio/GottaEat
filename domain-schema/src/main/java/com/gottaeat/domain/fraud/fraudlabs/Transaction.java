/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.gottaeat.domain.fraud.fraudlabs;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Transaction extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2405291103705611035L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Transaction\",\"namespace\":\"com.gottaeat.domain.fraud.fraudlabs\",\"fields\":[{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"lastName\",\"type\":\"string\"},{\"name\":\"firstName\",\"type\":\"string\"},{\"name\":\"billingAddress\",\"type\":{\"type\":\"record\",\"name\":\"Address\",\"namespace\":\"com.gottaeat.domain.geography\",\"fields\":[{\"name\":\"street\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"zip\",\"type\":\"string\"}]}},{\"name\":\"shipToLastName\",\"type\":\"string\"},{\"name\":\"shipToFirstName\",\"type\":\"string\"},{\"name\":\"shippingAddress\",\"type\":\"com.gottaeat.domain.geography.Address\"},{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"phoneNumber\",\"type\":\"string\"},{\"name\":\"paymentMode\",\"type\":{\"type\":\"enum\",\"name\":\"PaymentType\",\"symbols\":[\"CREDITCARD\",\"PAYPAL\",\"GOOGLECHECKOUT\",\"BITCOIN\",\"WIRED\"]}},{\"name\":\"amount\",\"type\":\"float\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Transaction> ENCODER =
      new BinaryMessageEncoder<Transaction>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Transaction> DECODER =
      new BinaryMessageDecoder<Transaction>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Transaction> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Transaction> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Transaction> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Transaction>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Transaction to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Transaction from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Transaction instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Transaction fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence ip;
  @Deprecated public java.lang.CharSequence lastName;
  @Deprecated public java.lang.CharSequence firstName;
  @Deprecated public com.gottaeat.domain.geography.Address billingAddress;
  @Deprecated public java.lang.CharSequence shipToLastName;
  @Deprecated public java.lang.CharSequence shipToFirstName;
  @Deprecated public com.gottaeat.domain.geography.Address shippingAddress;
  @Deprecated public java.lang.CharSequence email;
  @Deprecated public java.lang.CharSequence phoneNumber;
  @Deprecated public com.gottaeat.domain.fraud.fraudlabs.PaymentType paymentMode;
  @Deprecated public float amount;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Transaction() {}

  /**
   * All-args constructor.
   * @param ip The new value for ip
   * @param lastName The new value for lastName
   * @param firstName The new value for firstName
   * @param billingAddress The new value for billingAddress
   * @param shipToLastName The new value for shipToLastName
   * @param shipToFirstName The new value for shipToFirstName
   * @param shippingAddress The new value for shippingAddress
   * @param email The new value for email
   * @param phoneNumber The new value for phoneNumber
   * @param paymentMode The new value for paymentMode
   * @param amount The new value for amount
   */
  public Transaction(java.lang.CharSequence ip, java.lang.CharSequence lastName, java.lang.CharSequence firstName, com.gottaeat.domain.geography.Address billingAddress, java.lang.CharSequence shipToLastName, java.lang.CharSequence shipToFirstName, com.gottaeat.domain.geography.Address shippingAddress, java.lang.CharSequence email, java.lang.CharSequence phoneNumber, com.gottaeat.domain.fraud.fraudlabs.PaymentType paymentMode, java.lang.Float amount) {
    this.ip = ip;
    this.lastName = lastName;
    this.firstName = firstName;
    this.billingAddress = billingAddress;
    this.shipToLastName = shipToLastName;
    this.shipToFirstName = shipToFirstName;
    this.shippingAddress = shippingAddress;
    this.email = email;
    this.phoneNumber = phoneNumber;
    this.paymentMode = paymentMode;
    this.amount = amount;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ip;
    case 1: return lastName;
    case 2: return firstName;
    case 3: return billingAddress;
    case 4: return shipToLastName;
    case 5: return shipToFirstName;
    case 6: return shippingAddress;
    case 7: return email;
    case 8: return phoneNumber;
    case 9: return paymentMode;
    case 10: return amount;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ip = (java.lang.CharSequence)value$; break;
    case 1: lastName = (java.lang.CharSequence)value$; break;
    case 2: firstName = (java.lang.CharSequence)value$; break;
    case 3: billingAddress = (com.gottaeat.domain.geography.Address)value$; break;
    case 4: shipToLastName = (java.lang.CharSequence)value$; break;
    case 5: shipToFirstName = (java.lang.CharSequence)value$; break;
    case 6: shippingAddress = (com.gottaeat.domain.geography.Address)value$; break;
    case 7: email = (java.lang.CharSequence)value$; break;
    case 8: phoneNumber = (java.lang.CharSequence)value$; break;
    case 9: paymentMode = (com.gottaeat.domain.fraud.fraudlabs.PaymentType)value$; break;
    case 10: amount = (java.lang.Float)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ip' field.
   * @return The value of the 'ip' field.
   */
  public java.lang.CharSequence getIp() {
    return ip;
  }


  /**
   * Sets the value of the 'ip' field.
   * @param value the value to set.
   */
  public void setIp(java.lang.CharSequence value) {
    this.ip = value;
  }

  /**
   * Gets the value of the 'lastName' field.
   * @return The value of the 'lastName' field.
   */
  public java.lang.CharSequence getLastName() {
    return lastName;
  }


  /**
   * Sets the value of the 'lastName' field.
   * @param value the value to set.
   */
  public void setLastName(java.lang.CharSequence value) {
    this.lastName = value;
  }

  /**
   * Gets the value of the 'firstName' field.
   * @return The value of the 'firstName' field.
   */
  public java.lang.CharSequence getFirstName() {
    return firstName;
  }


  /**
   * Sets the value of the 'firstName' field.
   * @param value the value to set.
   */
  public void setFirstName(java.lang.CharSequence value) {
    this.firstName = value;
  }

  /**
   * Gets the value of the 'billingAddress' field.
   * @return The value of the 'billingAddress' field.
   */
  public com.gottaeat.domain.geography.Address getBillingAddress() {
    return billingAddress;
  }


  /**
   * Sets the value of the 'billingAddress' field.
   * @param value the value to set.
   */
  public void setBillingAddress(com.gottaeat.domain.geography.Address value) {
    this.billingAddress = value;
  }

  /**
   * Gets the value of the 'shipToLastName' field.
   * @return The value of the 'shipToLastName' field.
   */
  public java.lang.CharSequence getShipToLastName() {
    return shipToLastName;
  }


  /**
   * Sets the value of the 'shipToLastName' field.
   * @param value the value to set.
   */
  public void setShipToLastName(java.lang.CharSequence value) {
    this.shipToLastName = value;
  }

  /**
   * Gets the value of the 'shipToFirstName' field.
   * @return The value of the 'shipToFirstName' field.
   */
  public java.lang.CharSequence getShipToFirstName() {
    return shipToFirstName;
  }


  /**
   * Sets the value of the 'shipToFirstName' field.
   * @param value the value to set.
   */
  public void setShipToFirstName(java.lang.CharSequence value) {
    this.shipToFirstName = value;
  }

  /**
   * Gets the value of the 'shippingAddress' field.
   * @return The value of the 'shippingAddress' field.
   */
  public com.gottaeat.domain.geography.Address getShippingAddress() {
    return shippingAddress;
  }


  /**
   * Sets the value of the 'shippingAddress' field.
   * @param value the value to set.
   */
  public void setShippingAddress(com.gottaeat.domain.geography.Address value) {
    this.shippingAddress = value;
  }

  /**
   * Gets the value of the 'email' field.
   * @return The value of the 'email' field.
   */
  public java.lang.CharSequence getEmail() {
    return email;
  }


  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.CharSequence value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'phoneNumber' field.
   * @return The value of the 'phoneNumber' field.
   */
  public java.lang.CharSequence getPhoneNumber() {
    return phoneNumber;
  }


  /**
   * Sets the value of the 'phoneNumber' field.
   * @param value the value to set.
   */
  public void setPhoneNumber(java.lang.CharSequence value) {
    this.phoneNumber = value;
  }

  /**
   * Gets the value of the 'paymentMode' field.
   * @return The value of the 'paymentMode' field.
   */
  public com.gottaeat.domain.fraud.fraudlabs.PaymentType getPaymentMode() {
    return paymentMode;
  }


  /**
   * Sets the value of the 'paymentMode' field.
   * @param value the value to set.
   */
  public void setPaymentMode(com.gottaeat.domain.fraud.fraudlabs.PaymentType value) {
    this.paymentMode = value;
  }

  /**
   * Gets the value of the 'amount' field.
   * @return The value of the 'amount' field.
   */
  public float getAmount() {
    return amount;
  }


  /**
   * Sets the value of the 'amount' field.
   * @param value the value to set.
   */
  public void setAmount(float value) {
    this.amount = value;
  }

  /**
   * Creates a new Transaction RecordBuilder.
   * @return A new Transaction RecordBuilder
   */
  public static com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder newBuilder() {
    return new com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder();
  }

  /**
   * Creates a new Transaction RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Transaction RecordBuilder
   */
  public static com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder newBuilder(com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder other) {
    if (other == null) {
      return new com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder();
    } else {
      return new com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder(other);
    }
  }

  /**
   * Creates a new Transaction RecordBuilder by copying an existing Transaction instance.
   * @param other The existing instance to copy.
   * @return A new Transaction RecordBuilder
   */
  public static com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder newBuilder(com.gottaeat.domain.fraud.fraudlabs.Transaction other) {
    if (other == null) {
      return new com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder();
    } else {
      return new com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder(other);
    }
  }

  /**
   * RecordBuilder for Transaction instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Transaction>
    implements org.apache.avro.data.RecordBuilder<Transaction> {

    private java.lang.CharSequence ip;
    private java.lang.CharSequence lastName;
    private java.lang.CharSequence firstName;
    private com.gottaeat.domain.geography.Address billingAddress;
    private com.gottaeat.domain.geography.Address.Builder billingAddressBuilder;
    private java.lang.CharSequence shipToLastName;
    private java.lang.CharSequence shipToFirstName;
    private com.gottaeat.domain.geography.Address shippingAddress;
    private com.gottaeat.domain.geography.Address.Builder shippingAddressBuilder;
    private java.lang.CharSequence email;
    private java.lang.CharSequence phoneNumber;
    private com.gottaeat.domain.fraud.fraudlabs.PaymentType paymentMode;
    private float amount;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ip)) {
        this.ip = data().deepCopy(fields()[0].schema(), other.ip);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.lastName)) {
        this.lastName = data().deepCopy(fields()[1].schema(), other.lastName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.firstName)) {
        this.firstName = data().deepCopy(fields()[2].schema(), other.firstName);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.billingAddress)) {
        this.billingAddress = data().deepCopy(fields()[3].schema(), other.billingAddress);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (other.hasBillingAddressBuilder()) {
        this.billingAddressBuilder = com.gottaeat.domain.geography.Address.newBuilder(other.getBillingAddressBuilder());
      }
      if (isValidValue(fields()[4], other.shipToLastName)) {
        this.shipToLastName = data().deepCopy(fields()[4].schema(), other.shipToLastName);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.shipToFirstName)) {
        this.shipToFirstName = data().deepCopy(fields()[5].schema(), other.shipToFirstName);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.shippingAddress)) {
        this.shippingAddress = data().deepCopy(fields()[6].schema(), other.shippingAddress);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (other.hasShippingAddressBuilder()) {
        this.shippingAddressBuilder = com.gottaeat.domain.geography.Address.newBuilder(other.getShippingAddressBuilder());
      }
      if (isValidValue(fields()[7], other.email)) {
        this.email = data().deepCopy(fields()[7].schema(), other.email);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.phoneNumber)) {
        this.phoneNumber = data().deepCopy(fields()[8].schema(), other.phoneNumber);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.paymentMode)) {
        this.paymentMode = data().deepCopy(fields()[9].schema(), other.paymentMode);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.amount)) {
        this.amount = data().deepCopy(fields()[10].schema(), other.amount);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
    }

    /**
     * Creates a Builder by copying an existing Transaction instance
     * @param other The existing instance to copy.
     */
    private Builder(com.gottaeat.domain.fraud.fraudlabs.Transaction other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.ip)) {
        this.ip = data().deepCopy(fields()[0].schema(), other.ip);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lastName)) {
        this.lastName = data().deepCopy(fields()[1].schema(), other.lastName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.firstName)) {
        this.firstName = data().deepCopy(fields()[2].schema(), other.firstName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.billingAddress)) {
        this.billingAddress = data().deepCopy(fields()[3].schema(), other.billingAddress);
        fieldSetFlags()[3] = true;
      }
      this.billingAddressBuilder = null;
      if (isValidValue(fields()[4], other.shipToLastName)) {
        this.shipToLastName = data().deepCopy(fields()[4].schema(), other.shipToLastName);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.shipToFirstName)) {
        this.shipToFirstName = data().deepCopy(fields()[5].schema(), other.shipToFirstName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.shippingAddress)) {
        this.shippingAddress = data().deepCopy(fields()[6].schema(), other.shippingAddress);
        fieldSetFlags()[6] = true;
      }
      this.shippingAddressBuilder = null;
      if (isValidValue(fields()[7], other.email)) {
        this.email = data().deepCopy(fields()[7].schema(), other.email);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.phoneNumber)) {
        this.phoneNumber = data().deepCopy(fields()[8].schema(), other.phoneNumber);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.paymentMode)) {
        this.paymentMode = data().deepCopy(fields()[9].schema(), other.paymentMode);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.amount)) {
        this.amount = data().deepCopy(fields()[10].schema(), other.amount);
        fieldSetFlags()[10] = true;
      }
    }

    /**
      * Gets the value of the 'ip' field.
      * @return The value.
      */
    public java.lang.CharSequence getIp() {
      return ip;
    }


    /**
      * Sets the value of the 'ip' field.
      * @param value The value of 'ip'.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder setIp(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.ip = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'ip' field has been set.
      * @return True if the 'ip' field has been set, false otherwise.
      */
    public boolean hasIp() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'ip' field.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder clearIp() {
      ip = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastName' field.
      * @return The value.
      */
    public java.lang.CharSequence getLastName() {
      return lastName;
    }


    /**
      * Sets the value of the 'lastName' field.
      * @param value The value of 'lastName'.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder setLastName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.lastName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'lastName' field has been set.
      * @return True if the 'lastName' field has been set, false otherwise.
      */
    public boolean hasLastName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'lastName' field.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder clearLastName() {
      lastName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'firstName' field.
      * @return The value.
      */
    public java.lang.CharSequence getFirstName() {
      return firstName;
    }


    /**
      * Sets the value of the 'firstName' field.
      * @param value The value of 'firstName'.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder setFirstName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.firstName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'firstName' field has been set.
      * @return True if the 'firstName' field has been set, false otherwise.
      */
    public boolean hasFirstName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'firstName' field.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder clearFirstName() {
      firstName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'billingAddress' field.
      * @return The value.
      */
    public com.gottaeat.domain.geography.Address getBillingAddress() {
      return billingAddress;
    }


    /**
      * Sets the value of the 'billingAddress' field.
      * @param value The value of 'billingAddress'.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder setBillingAddress(com.gottaeat.domain.geography.Address value) {
      validate(fields()[3], value);
      this.billingAddressBuilder = null;
      this.billingAddress = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'billingAddress' field has been set.
      * @return True if the 'billingAddress' field has been set, false otherwise.
      */
    public boolean hasBillingAddress() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'billingAddress' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.gottaeat.domain.geography.Address.Builder getBillingAddressBuilder() {
      if (billingAddressBuilder == null) {
        if (hasBillingAddress()) {
          setBillingAddressBuilder(com.gottaeat.domain.geography.Address.newBuilder(billingAddress));
        } else {
          setBillingAddressBuilder(com.gottaeat.domain.geography.Address.newBuilder());
        }
      }
      return billingAddressBuilder;
    }

    /**
     * Sets the Builder instance for the 'billingAddress' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder setBillingAddressBuilder(com.gottaeat.domain.geography.Address.Builder value) {
      clearBillingAddress();
      billingAddressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'billingAddress' field has an active Builder instance
     * @return True if the 'billingAddress' field has an active Builder instance
     */
    public boolean hasBillingAddressBuilder() {
      return billingAddressBuilder != null;
    }

    /**
      * Clears the value of the 'billingAddress' field.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder clearBillingAddress() {
      billingAddress = null;
      billingAddressBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'shipToLastName' field.
      * @return The value.
      */
    public java.lang.CharSequence getShipToLastName() {
      return shipToLastName;
    }


    /**
      * Sets the value of the 'shipToLastName' field.
      * @param value The value of 'shipToLastName'.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder setShipToLastName(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.shipToLastName = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'shipToLastName' field has been set.
      * @return True if the 'shipToLastName' field has been set, false otherwise.
      */
    public boolean hasShipToLastName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'shipToLastName' field.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder clearShipToLastName() {
      shipToLastName = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'shipToFirstName' field.
      * @return The value.
      */
    public java.lang.CharSequence getShipToFirstName() {
      return shipToFirstName;
    }


    /**
      * Sets the value of the 'shipToFirstName' field.
      * @param value The value of 'shipToFirstName'.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder setShipToFirstName(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.shipToFirstName = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'shipToFirstName' field has been set.
      * @return True if the 'shipToFirstName' field has been set, false otherwise.
      */
    public boolean hasShipToFirstName() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'shipToFirstName' field.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder clearShipToFirstName() {
      shipToFirstName = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'shippingAddress' field.
      * @return The value.
      */
    public com.gottaeat.domain.geography.Address getShippingAddress() {
      return shippingAddress;
    }


    /**
      * Sets the value of the 'shippingAddress' field.
      * @param value The value of 'shippingAddress'.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder setShippingAddress(com.gottaeat.domain.geography.Address value) {
      validate(fields()[6], value);
      this.shippingAddressBuilder = null;
      this.shippingAddress = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'shippingAddress' field has been set.
      * @return True if the 'shippingAddress' field has been set, false otherwise.
      */
    public boolean hasShippingAddress() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'shippingAddress' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.gottaeat.domain.geography.Address.Builder getShippingAddressBuilder() {
      if (shippingAddressBuilder == null) {
        if (hasShippingAddress()) {
          setShippingAddressBuilder(com.gottaeat.domain.geography.Address.newBuilder(shippingAddress));
        } else {
          setShippingAddressBuilder(com.gottaeat.domain.geography.Address.newBuilder());
        }
      }
      return shippingAddressBuilder;
    }

    /**
     * Sets the Builder instance for the 'shippingAddress' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder setShippingAddressBuilder(com.gottaeat.domain.geography.Address.Builder value) {
      clearShippingAddress();
      shippingAddressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'shippingAddress' field has an active Builder instance
     * @return True if the 'shippingAddress' field has an active Builder instance
     */
    public boolean hasShippingAddressBuilder() {
      return shippingAddressBuilder != null;
    }

    /**
      * Clears the value of the 'shippingAddress' field.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder clearShippingAddress() {
      shippingAddress = null;
      shippingAddressBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public java.lang.CharSequence getEmail() {
      return email;
    }


    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder setEmail(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.email = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder clearEmail() {
      email = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'phoneNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getPhoneNumber() {
      return phoneNumber;
    }


    /**
      * Sets the value of the 'phoneNumber' field.
      * @param value The value of 'phoneNumber'.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder setPhoneNumber(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.phoneNumber = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'phoneNumber' field has been set.
      * @return True if the 'phoneNumber' field has been set, false otherwise.
      */
    public boolean hasPhoneNumber() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'phoneNumber' field.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder clearPhoneNumber() {
      phoneNumber = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'paymentMode' field.
      * @return The value.
      */
    public com.gottaeat.domain.fraud.fraudlabs.PaymentType getPaymentMode() {
      return paymentMode;
    }


    /**
      * Sets the value of the 'paymentMode' field.
      * @param value The value of 'paymentMode'.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder setPaymentMode(com.gottaeat.domain.fraud.fraudlabs.PaymentType value) {
      validate(fields()[9], value);
      this.paymentMode = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'paymentMode' field has been set.
      * @return True if the 'paymentMode' field has been set, false otherwise.
      */
    public boolean hasPaymentMode() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'paymentMode' field.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder clearPaymentMode() {
      paymentMode = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'amount' field.
      * @return The value.
      */
    public float getAmount() {
      return amount;
    }


    /**
      * Sets the value of the 'amount' field.
      * @param value The value of 'amount'.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder setAmount(float value) {
      validate(fields()[10], value);
      this.amount = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'amount' field has been set.
      * @return True if the 'amount' field has been set, false otherwise.
      */
    public boolean hasAmount() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'amount' field.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.fraudlabs.Transaction.Builder clearAmount() {
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Transaction build() {
      try {
        Transaction record = new Transaction();
        record.ip = fieldSetFlags()[0] ? this.ip : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.lastName = fieldSetFlags()[1] ? this.lastName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.firstName = fieldSetFlags()[2] ? this.firstName : (java.lang.CharSequence) defaultValue(fields()[2]);
        if (billingAddressBuilder != null) {
          try {
            record.billingAddress = this.billingAddressBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("billingAddress"));
            throw e;
          }
        } else {
          record.billingAddress = fieldSetFlags()[3] ? this.billingAddress : (com.gottaeat.domain.geography.Address) defaultValue(fields()[3]);
        }
        record.shipToLastName = fieldSetFlags()[4] ? this.shipToLastName : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.shipToFirstName = fieldSetFlags()[5] ? this.shipToFirstName : (java.lang.CharSequence) defaultValue(fields()[5]);
        if (shippingAddressBuilder != null) {
          try {
            record.shippingAddress = this.shippingAddressBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("shippingAddress"));
            throw e;
          }
        } else {
          record.shippingAddress = fieldSetFlags()[6] ? this.shippingAddress : (com.gottaeat.domain.geography.Address) defaultValue(fields()[6]);
        }
        record.email = fieldSetFlags()[7] ? this.email : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.phoneNumber = fieldSetFlags()[8] ? this.phoneNumber : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.paymentMode = fieldSetFlags()[9] ? this.paymentMode : (com.gottaeat.domain.fraud.fraudlabs.PaymentType) defaultValue(fields()[9]);
        record.amount = fieldSetFlags()[10] ? this.amount : (java.lang.Float) defaultValue(fields()[10]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Transaction>
    WRITER$ = (org.apache.avro.io.DatumWriter<Transaction>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Transaction>
    READER$ = (org.apache.avro.io.DatumReader<Transaction>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.ip);

    out.writeString(this.lastName);

    out.writeString(this.firstName);

    this.billingAddress.customEncode(out);

    out.writeString(this.shipToLastName);

    out.writeString(this.shipToFirstName);

    this.shippingAddress.customEncode(out);

    out.writeString(this.email);

    out.writeString(this.phoneNumber);

    out.writeEnum(this.paymentMode.ordinal());

    out.writeFloat(this.amount);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.ip = in.readString(this.ip instanceof Utf8 ? (Utf8)this.ip : null);

      this.lastName = in.readString(this.lastName instanceof Utf8 ? (Utf8)this.lastName : null);

      this.firstName = in.readString(this.firstName instanceof Utf8 ? (Utf8)this.firstName : null);

      if (this.billingAddress == null) {
        this.billingAddress = new com.gottaeat.domain.geography.Address();
      }
      this.billingAddress.customDecode(in);

      this.shipToLastName = in.readString(this.shipToLastName instanceof Utf8 ? (Utf8)this.shipToLastName : null);

      this.shipToFirstName = in.readString(this.shipToFirstName instanceof Utf8 ? (Utf8)this.shipToFirstName : null);

      if (this.shippingAddress == null) {
        this.shippingAddress = new com.gottaeat.domain.geography.Address();
      }
      this.shippingAddress.customDecode(in);

      this.email = in.readString(this.email instanceof Utf8 ? (Utf8)this.email : null);

      this.phoneNumber = in.readString(this.phoneNumber instanceof Utf8 ? (Utf8)this.phoneNumber : null);

      this.paymentMode = com.gottaeat.domain.fraud.fraudlabs.PaymentType.values()[in.readEnum()];

      this.amount = in.readFloat();

    } else {
      for (int i = 0; i < 11; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.ip = in.readString(this.ip instanceof Utf8 ? (Utf8)this.ip : null);
          break;

        case 1:
          this.lastName = in.readString(this.lastName instanceof Utf8 ? (Utf8)this.lastName : null);
          break;

        case 2:
          this.firstName = in.readString(this.firstName instanceof Utf8 ? (Utf8)this.firstName : null);
          break;

        case 3:
          if (this.billingAddress == null) {
            this.billingAddress = new com.gottaeat.domain.geography.Address();
          }
          this.billingAddress.customDecode(in);
          break;

        case 4:
          this.shipToLastName = in.readString(this.shipToLastName instanceof Utf8 ? (Utf8)this.shipToLastName : null);
          break;

        case 5:
          this.shipToFirstName = in.readString(this.shipToFirstName instanceof Utf8 ? (Utf8)this.shipToFirstName : null);
          break;

        case 6:
          if (this.shippingAddress == null) {
            this.shippingAddress = new com.gottaeat.domain.geography.Address();
          }
          this.shippingAddress.customDecode(in);
          break;

        case 7:
          this.email = in.readString(this.email instanceof Utf8 ? (Utf8)this.email : null);
          break;

        case 8:
          this.phoneNumber = in.readString(this.phoneNumber instanceof Utf8 ? (Utf8)this.phoneNumber : null);
          break;

        case 9:
          this.paymentMode = com.gottaeat.domain.fraud.fraudlabs.PaymentType.values()[in.readEnum()];
          break;

        case 10:
          this.amount = in.readFloat();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










