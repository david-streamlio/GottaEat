/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.gottaeat.domain.fraud;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class FraudScoringResult extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3524781321733173009L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FraudScoringResult\",\"namespace\":\"com.gottaeat.domain.fraud\",\"fields\":[{\"name\":\"order\",\"type\":{\"type\":\"record\",\"name\":\"OrderScoringData\",\"fields\":[{\"name\":\"order\",\"type\":{\"type\":\"record\",\"name\":\"FoodOrder\",\"namespace\":\"com.gottaeat.domain.order\",\"fields\":[{\"name\":\"meta\",\"type\":{\"type\":\"record\",\"name\":\"FoodOrderMeta\",\"fields\":[{\"name\":\"order_id\",\"type\":\"long\"},{\"name\":\"customer_id\",\"type\":\"long\"},{\"name\":\"time_placed\",\"type\":\"string\"},{\"name\":\"order_status\",\"type\":{\"type\":\"enum\",\"name\":\"OrderStatus\",\"symbols\":[\"NEW\",\"VALIDATED\",\"ACCEPTED\",\"READY\",\"DISPATCHED\",\"DELIVERED\"]}}]}},{\"name\":\"food\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"FoodOrderDetail\",\"namespace\":\"com.gottaeat.domain.resturant\",\"fields\":[{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"food_item\",\"type\":{\"type\":\"record\",\"name\":\"MenuItem\",\"fields\":[{\"name\":\"item_id\",\"type\":\"long\"},{\"name\":\"item_name\",\"type\":\"string\"},{\"name\":\"item_description\",\"type\":\"string\"},{\"name\":\"customizations\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"default\":[\"\"]},{\"name\":\"price\",\"type\":\"float\"},{\"name\":\"taxable\",\"type\":\"boolean\"}]}}]}}},{\"name\":\"delivery_location\",\"type\":{\"type\":\"record\",\"name\":\"Address\",\"namespace\":\"com.gottaeat.domain.geography\",\"fields\":[{\"name\":\"street\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"zip\",\"type\":\"string\"}]}},{\"name\":\"payment\",\"type\":{\"type\":\"record\",\"name\":\"Payment\",\"namespace\":\"com.gottaeat.domain.payment\",\"fields\":[{\"name\":\"method_of_payment\",\"type\":{\"type\":\"record\",\"name\":\"PaymentMethod\",\"fields\":[{\"name\":\"type\",\"type\":[{\"type\":\"record\",\"name\":\"CreditCard\",\"fields\":[{\"name\":\"card_type\",\"type\":{\"type\":\"enum\",\"name\":\"CardType\",\"symbols\":[\"MASTERCARD\",\"AMEX\",\"VISA\",\"DISCOVER\"]}},{\"name\":\"account_number\",\"type\":\"string\"},{\"name\":\"billing_zip\",\"type\":\"string\"},{\"name\":\"ccv\",\"type\":\"string\"},{\"name\":\"expMonth\",\"type\":\"string\"},{\"name\":\"expYear\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"DebitCard\",\"fields\":[{\"name\":\"card_type\",\"type\":\"CardType\"},{\"name\":\"account_number\",\"type\":\"string\"},{\"name\":\"billing_zip\",\"type\":\"string\"},{\"name\":\"pin\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"ElectronicCheck\",\"fields\":[{\"name\":\"routingNumber\",\"type\":\"string\"},{\"name\":\"accountNumber\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"ApplePay\",\"fields\":[{\"name\":\"accountNumber\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"PayPal\",\"fields\":[{\"name\":\"accountNumber\",\"type\":\"string\"}]}]}]}},{\"name\":\"amount\",\"type\":{\"type\":\"record\",\"name\":\"PaymentAmount\",\"fields\":[{\"name\":\"food_total\",\"type\":\"float\"},{\"name\":\"tax\",\"type\":\"float\"},{\"name\":\"total\",\"type\":\"float\"}]}}]}}]}},{\"name\":\"customer\",\"type\":{\"type\":\"record\",\"name\":\"CustomerDetails\",\"namespace\":\"com.gottaeat.domain.customer\",\"fields\":[{\"name\":\"lastName\",\"type\":\"string\"},{\"name\":\"firstName\",\"type\":\"string\"},{\"name\":\"billingAddress\",\"type\":\"com.gottaeat.domain.geography.Address\"},{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"phoneNumber\",\"type\":\"string\"}]}}]}},{\"name\":\"riskScore\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<FraudScoringResult> ENCODER =
      new BinaryMessageEncoder<FraudScoringResult>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<FraudScoringResult> DECODER =
      new BinaryMessageDecoder<FraudScoringResult>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<FraudScoringResult> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<FraudScoringResult> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<FraudScoringResult> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<FraudScoringResult>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this FraudScoringResult to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a FraudScoringResult from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a FraudScoringResult instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static FraudScoringResult fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public com.gottaeat.domain.fraud.OrderScoringData order;
  @Deprecated public int riskScore;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FraudScoringResult() {}

  /**
   * All-args constructor.
   * @param order The new value for order
   * @param riskScore The new value for riskScore
   */
  public FraudScoringResult(com.gottaeat.domain.fraud.OrderScoringData order, java.lang.Integer riskScore) {
    this.order = order;
    this.riskScore = riskScore;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return order;
    case 1: return riskScore;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: order = (com.gottaeat.domain.fraud.OrderScoringData)value$; break;
    case 1: riskScore = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'order' field.
   * @return The value of the 'order' field.
   */
  public com.gottaeat.domain.fraud.OrderScoringData getOrder() {
    return order;
  }


  /**
   * Sets the value of the 'order' field.
   * @param value the value to set.
   */
  public void setOrder(com.gottaeat.domain.fraud.OrderScoringData value) {
    this.order = value;
  }

  /**
   * Gets the value of the 'riskScore' field.
   * @return The value of the 'riskScore' field.
   */
  public int getRiskScore() {
    return riskScore;
  }


  /**
   * Sets the value of the 'riskScore' field.
   * @param value the value to set.
   */
  public void setRiskScore(int value) {
    this.riskScore = value;
  }

  /**
   * Creates a new FraudScoringResult RecordBuilder.
   * @return A new FraudScoringResult RecordBuilder
   */
  public static com.gottaeat.domain.fraud.FraudScoringResult.Builder newBuilder() {
    return new com.gottaeat.domain.fraud.FraudScoringResult.Builder();
  }

  /**
   * Creates a new FraudScoringResult RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FraudScoringResult RecordBuilder
   */
  public static com.gottaeat.domain.fraud.FraudScoringResult.Builder newBuilder(com.gottaeat.domain.fraud.FraudScoringResult.Builder other) {
    if (other == null) {
      return new com.gottaeat.domain.fraud.FraudScoringResult.Builder();
    } else {
      return new com.gottaeat.domain.fraud.FraudScoringResult.Builder(other);
    }
  }

  /**
   * Creates a new FraudScoringResult RecordBuilder by copying an existing FraudScoringResult instance.
   * @param other The existing instance to copy.
   * @return A new FraudScoringResult RecordBuilder
   */
  public static com.gottaeat.domain.fraud.FraudScoringResult.Builder newBuilder(com.gottaeat.domain.fraud.FraudScoringResult other) {
    if (other == null) {
      return new com.gottaeat.domain.fraud.FraudScoringResult.Builder();
    } else {
      return new com.gottaeat.domain.fraud.FraudScoringResult.Builder(other);
    }
  }

  /**
   * RecordBuilder for FraudScoringResult instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FraudScoringResult>
    implements org.apache.avro.data.RecordBuilder<FraudScoringResult> {

    private com.gottaeat.domain.fraud.OrderScoringData order;
    private com.gottaeat.domain.fraud.OrderScoringData.Builder orderBuilder;
    private int riskScore;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.gottaeat.domain.fraud.FraudScoringResult.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.order)) {
        this.order = data().deepCopy(fields()[0].schema(), other.order);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasOrderBuilder()) {
        this.orderBuilder = com.gottaeat.domain.fraud.OrderScoringData.newBuilder(other.getOrderBuilder());
      }
      if (isValidValue(fields()[1], other.riskScore)) {
        this.riskScore = data().deepCopy(fields()[1].schema(), other.riskScore);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
    }

    /**
     * Creates a Builder by copying an existing FraudScoringResult instance
     * @param other The existing instance to copy.
     */
    private Builder(com.gottaeat.domain.fraud.FraudScoringResult other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.order)) {
        this.order = data().deepCopy(fields()[0].schema(), other.order);
        fieldSetFlags()[0] = true;
      }
      this.orderBuilder = null;
      if (isValidValue(fields()[1], other.riskScore)) {
        this.riskScore = data().deepCopy(fields()[1].schema(), other.riskScore);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'order' field.
      * @return The value.
      */
    public com.gottaeat.domain.fraud.OrderScoringData getOrder() {
      return order;
    }


    /**
      * Sets the value of the 'order' field.
      * @param value The value of 'order'.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.FraudScoringResult.Builder setOrder(com.gottaeat.domain.fraud.OrderScoringData value) {
      validate(fields()[0], value);
      this.orderBuilder = null;
      this.order = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'order' field has been set.
      * @return True if the 'order' field has been set, false otherwise.
      */
    public boolean hasOrder() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'order' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.gottaeat.domain.fraud.OrderScoringData.Builder getOrderBuilder() {
      if (orderBuilder == null) {
        if (hasOrder()) {
          setOrderBuilder(com.gottaeat.domain.fraud.OrderScoringData.newBuilder(order));
        } else {
          setOrderBuilder(com.gottaeat.domain.fraud.OrderScoringData.newBuilder());
        }
      }
      return orderBuilder;
    }

    /**
     * Sets the Builder instance for the 'order' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.gottaeat.domain.fraud.FraudScoringResult.Builder setOrderBuilder(com.gottaeat.domain.fraud.OrderScoringData.Builder value) {
      clearOrder();
      orderBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'order' field has an active Builder instance
     * @return True if the 'order' field has an active Builder instance
     */
    public boolean hasOrderBuilder() {
      return orderBuilder != null;
    }

    /**
      * Clears the value of the 'order' field.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.FraudScoringResult.Builder clearOrder() {
      order = null;
      orderBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'riskScore' field.
      * @return The value.
      */
    public int getRiskScore() {
      return riskScore;
    }


    /**
      * Sets the value of the 'riskScore' field.
      * @param value The value of 'riskScore'.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.FraudScoringResult.Builder setRiskScore(int value) {
      validate(fields()[1], value);
      this.riskScore = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'riskScore' field has been set.
      * @return True if the 'riskScore' field has been set, false otherwise.
      */
    public boolean hasRiskScore() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'riskScore' field.
      * @return This builder.
      */
    public com.gottaeat.domain.fraud.FraudScoringResult.Builder clearRiskScore() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public FraudScoringResult build() {
      try {
        FraudScoringResult record = new FraudScoringResult();
        if (orderBuilder != null) {
          try {
            record.order = this.orderBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("order"));
            throw e;
          }
        } else {
          record.order = fieldSetFlags()[0] ? this.order : (com.gottaeat.domain.fraud.OrderScoringData) defaultValue(fields()[0]);
        }
        record.riskScore = fieldSetFlags()[1] ? this.riskScore : (java.lang.Integer) defaultValue(fields()[1]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<FraudScoringResult>
    WRITER$ = (org.apache.avro.io.DatumWriter<FraudScoringResult>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<FraudScoringResult>
    READER$ = (org.apache.avro.io.DatumReader<FraudScoringResult>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










